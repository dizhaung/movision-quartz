<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-lazy-init="true" default-autowire="byName">

    <description>Spring公共配置</description>
    <!-- 扫描注解Bean -->
    <context:component-scan base-package="com.movision">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <context:property-placeholder
            ignore-unresolvable="true" location="classpath*:application.properties"/>

    <!-- 配置线程池 -->
    <!--<bean id="taskExecutor"-->
    <!--class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">-->
    <!--&lt;!&ndash; 线程池维护线程的最少数量 &ndash;&gt;-->
    <!--<property name="corePoolSize" value="5"/>-->
    <!--&lt;!&ndash; 线程池维护线程的最大数量 &ndash;&gt;-->
    <!--<property name="maxPoolSize" value="1000"/>-->
    <!--&lt;!&ndash; 线程池所使用的缓冲队列 &ndash;&gt;-->
    <!--<property name="queueCapacity" value="200"/>-->
    <!--&lt;!&ndash; 线程池维护线程所允许的空闲时间 &ndash;&gt;-->
    <!--<property name="keepAliveSeconds" value="30000"/>-->
    <!--&lt;!&ndash;<property name="WaitForTasksToCompleteOnShutdown" value="true" />&ndash;&gt;-->
    <!--</bean>-->


    <bean id="sqlSessionFactory" class="com.movision.exception.MyBatisExceptionHandler">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-configuration.xml"/>
        <property name="mapperLocations" value="classpath*:mapper/**/*.xml"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <!--<tx:annotation-driven transaction-manager="transactionManager"-->
                          <!--proxy-target-class="true"/>-->

    <!-- mybatis -->
    <mybatis:scan base-package="com.movision.mybatis.mapper"/>

    <!-- 数据源配置, 使用druid数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${druid.initialSize}"/>
        <property name="minIdle" value="${druid.minIdle}"/>
        <property name="maxActive" value="${druid.maxActive}"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${druid.maxWait}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}"/>

        <property name="validationQuery" value="${druid.validationQuery}"/>
        <property name="testWhileIdle" value="${druid.testWhileIdle}"/>
        <property name="testOnBorrow" value="${druid.testOnBorrow}"/>
        <property name="testOnReturn" value="${druid.testOnReturn}"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小  如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。-->
        <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${druid.maxPoolPreparedStatementPerConnectionSize}"/>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="${druid.filters}"/>

    </bean>

    <import resource="spring-quartz.xml"/>
</beans>